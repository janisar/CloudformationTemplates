Description: Creates a lambda function for redirect

Parameters:
  Destination:
    Type: String
    Description: "Destination url for the redirect"
    Default: "https://i-med.com.au/alfred-smri-now-i-med"
  ApiName:
    Type: String
    Description: Api Gateway name
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              const response = {
                  statusCode: 301,
                  headers: {
                      Location: process.env.destination
                  }
              };
              return response;
          };
      Description: "I-med redirect lambda"
      Environment:
        Variables:
          destination: !Ref Destination
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: "index.handler"
      Runtime: "nodejs12.x"
      Tags:
        - Key: "PROJECT"
          Value: "i-med"
  FunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Function.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [
          "", [
            "arn:aws:execute-api:",
            { "Ref": "AWS::Region" }, ":",
            { "Ref": "AWS::AccountId" }, ":",
            !Ref HttpApi, "/*/*/*"
        ]
      ]
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Ref ApiName
      Description: Lambda proxy using quick create
      ProtocolType: HTTP
      Target: !GetAtt Function.Arn
  MyRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: 'ANY /'
      Target: !Join
        - /
        - - integrations
          - !Ref Integration
  Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpApi
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt Function.Arn
          - /invocations
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'
Outputs:
  ApiUrl:
    Value: !GetAtt HttpApi.ApiEndpoint
    Description: "endpoint for the redirect api"
